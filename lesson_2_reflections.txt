What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, a .git directory is added to whichever
directory you created the repository in. You need to do this to initialize
the directory to be able to track the history of your files.

How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is different in that it shows you which files are getting
ready to be committed. It brings value by letting you choose which files
to commit while still maintaining the contents of the original directory.

How can you use the staging area to make sure you have one commit per logical
 change?

Once you make a change, git status allows you to see that you modified a file.
Adding it to the staging area will show you that you are about to commit the
file where that change was made, and it will show that no other files have been
changed because they won't show up as untracked.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Some situations where branches would be helpful would be when adding an experimental
feature to your program or adding a signficant change that you're not sure will
break you program. Branches help by allowing the user to maintain signficantly
 different versions of the program they are working on at the same time.